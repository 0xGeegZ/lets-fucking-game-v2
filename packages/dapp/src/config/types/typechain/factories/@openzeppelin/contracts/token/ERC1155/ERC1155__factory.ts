/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ERC1155,
  ERC1155Interface,
} from "../../../../../@openzeppelin/contracts/token/ERC1155/ERC1155";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "uri_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620017213803806200172183398101604081905262000034916200006e565b6200003f8162000046565b506200029e565b6002620000548282620001d2565b5050565b634e487b7160e01b600052604160045260246000fd5b600060208083850312156200008257600080fd5b82516001600160401b03808211156200009a57600080fd5b818501915085601f830112620000af57600080fd5b815181811115620000c457620000c462000058565b604051601f8201601f19908116603f01168101908382118183101715620000ef57620000ef62000058565b8160405282815288868487010111156200010857600080fd5b600093505b828410156200012c57848401860151818501870152928501926200010d565b600086848301015280965050505050505092915050565b600181811c908216806200015857607f821691505b6020821081036200017957634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001cd57600081815260208120601f850160051c81016020861015620001a85750805b601f850160051c820191505b81811015620001c957828155600101620001b4565b5050505b505050565b81516001600160401b03811115620001ee57620001ee62000058565b6200020681620001ff845462000143565b846200017f565b602080601f8311600181146200023e5760008415620002255750858301515b600019600386901b1c1916600185901b178555620001c9565b600085815260208120601f198616915b828110156200026f578886015182559484019460019091019084016200024e565b50858210156200028e5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61147380620002ae6000396000f3fe608060405234801561001057600080fd5b50600436106100875760003560e01c80634e1273f41161005b5780634e1273f41461010a578063a22cb4651461012a578063e985e9c51461013d578063f242432a1461017957600080fd5b8062fdd58e1461008c57806301ffc9a7146100b25780630e89341c146100d55780632eb2c2d6146100f5575b600080fd5b61009f61009a366004610d5d565b61018c565b6040519081526020015b60405180910390f35b6100c56100c0366004610da0565b610225565b60405190151581526020016100a9565b6100e86100e3366004610dc4565b610275565b6040516100a99190610e23565b610108610103366004610f82565b610309565b005b61011d61011836600461102c565b61039d565b6040516100a99190611132565b610108610138366004611145565b6104c7565b6100c561014b366004611181565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b6101086101873660046111b4565b6104d6565b60006001600160a01b0383166101fc5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201526930b634b21037bbb732b960b11b60648201526084015b60405180910390fd5b506000818152602081815260408083206001600160a01b03861684529091529020545b92915050565b60006001600160e01b03198216636cdb3d1360e11b148061025657506001600160e01b031982166303a24d0760e21b145b8061021f57506301ffc9a760e01b6001600160e01b031983161461021f565b60606002805461028490611219565b80601f01602080910402602001604051908101604052809291908181526020018280546102b090611219565b80156102fd5780601f106102d2576101008083540402835291602001916102fd565b820191906000526020600020905b8154815290600101906020018083116102e057829003601f168201915b50505050509050919050565b6001600160a01b0385163314806103255750610325853361014b565b6103895760405162461bcd60e51b815260206004820152602f60248201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60448201526e195c881b9bdc88185c1c1c9bdd9959608a1b60648201526084016101f3565b6103968585858585610563565b5050505050565b606081518351146104025760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b60648201526084016101f3565b6000835167ffffffffffffffff81111561041e5761041e610e36565b604051908082528060200260200182016040528015610447578160200160208202803683370190505b50905060005b84518110156104bf5761049285828151811061046b5761046b611253565b602002602001015185838151811061048557610485611253565b602002602001015161018c565b8282815181106104a4576104a4611253565b60209081029190910101526104b88161127f565b905061044d565b509392505050565b6104d23383836107c1565b5050565b6001600160a01b0385163314806104f257506104f2853361014b565b6105565760405162461bcd60e51b815260206004820152602f60248201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60448201526e195c881b9bdc88185c1c1c9bdd9959608a1b60648201526084016101f3565b61039685858585856108a1565b81518351146105c55760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016101f3565b6001600160a01b0384166106295760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b60648201526084016101f3565b3360005b845181101561075357600085828151811061064a5761064a611253565b60200260200101519050600085838151811061066857610668611253565b602090810291909101810151600084815280835260408082206001600160a01b038e1683529093529190912054909150818110156106fb5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b60648201526084016101f3565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290610738908490611298565b925050819055505050508061074c9061127f565b905061062d565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516107a39291906112ab565b60405180910390a46107b9818787878787610a4c565b505050505050565b816001600160a01b0316836001600160a01b0316036108345760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b60648201526084016101f3565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0384166109055760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b60648201526084016101f3565b33600061091185610bfa565b9050600061091e85610bfa565b90506000868152602081815260408083206001600160a01b038c168452909152902054858110156109a45760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b60648201526084016101f3565b6000878152602081815260408083206001600160a01b038d8116855292528083208985039055908a168252812080548892906109e1908490611298565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610a41848a8a8a8a8a610c45565b505050505050505050565b6001600160a01b0384163b156107b95760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610a9090899089908890889088906004016112d9565b6020604051808303816000875af1925050508015610acb575060408051601f3d908101601f19168201909252610ac891810190611337565b60015b610b8057610ad7611354565b806308c379a003610b105750610aeb611370565b80610af65750610b12565b8060405162461bcd60e51b81526004016101f39190610e23565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e204552433131353560448201527f526563656976657220696d706c656d656e74657200000000000000000000000060648201526084016101f3565b6001600160e01b0319811663bc197c8160e01b14610bf15760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b60648201526084016101f3565b50505050505050565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610c3457610c34611253565b602090810291909101015292915050565b6001600160a01b0384163b156107b95760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610c8990899089908890889088906004016113fa565b6020604051808303816000875af1925050508015610cc4575060408051601f3d908101601f19168201909252610cc191810190611337565b60015b610cd057610ad7611354565b6001600160e01b0319811663f23a6e6160e01b14610bf15760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b60648201526084016101f3565b80356001600160a01b0381168114610d5857600080fd5b919050565b60008060408385031215610d7057600080fd5b610d7983610d41565b946020939093013593505050565b6001600160e01b031981168114610d9d57600080fd5b50565b600060208284031215610db257600080fd5b8135610dbd81610d87565b9392505050565b600060208284031215610dd657600080fd5b5035919050565b6000815180845260005b81811015610e0357602081850181015186830182015201610de7565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610dbd6020830184610ddd565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715610e7257610e72610e36565b6040525050565b600067ffffffffffffffff821115610e9357610e93610e36565b5060051b60200190565b600082601f830112610eae57600080fd5b81356020610ebb82610e79565b604051610ec88282610e4c565b83815260059390931b8501820192828101915086841115610ee857600080fd5b8286015b84811015610f035780358352918301918301610eec565b509695505050505050565b600082601f830112610f1f57600080fd5b813567ffffffffffffffff811115610f3957610f39610e36565b604051610f50601f8301601f191660200182610e4c565b818152846020838601011115610f6557600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215610f9a57600080fd5b610fa386610d41565b9450610fb160208701610d41565b9350604086013567ffffffffffffffff80821115610fce57600080fd5b610fda89838a01610e9d565b94506060880135915080821115610ff057600080fd5b610ffc89838a01610e9d565b9350608088013591508082111561101257600080fd5b5061101f88828901610f0e565b9150509295509295909350565b6000806040838503121561103f57600080fd5b823567ffffffffffffffff8082111561105757600080fd5b818501915085601f83011261106b57600080fd5b8135602061107882610e79565b6040516110858282610e4c565b83815260059390931b85018201928281019150898411156110a557600080fd5b948201945b838610156110ca576110bb86610d41565b825294820194908201906110aa565b965050860135925050808211156110e057600080fd5b506110ed85828601610e9d565b9150509250929050565b600081518084526020808501945080840160005b838110156111275781518752958201959082019060010161110b565b509495945050505050565b602081526000610dbd60208301846110f7565b6000806040838503121561115857600080fd5b61116183610d41565b91506020830135801515811461117657600080fd5b809150509250929050565b6000806040838503121561119457600080fd5b61119d83610d41565b91506111ab60208401610d41565b90509250929050565b600080600080600060a086880312156111cc57600080fd5b6111d586610d41565b94506111e360208701610d41565b93506040860135925060608601359150608086013567ffffffffffffffff81111561120d57600080fd5b61101f88828901610f0e565b600181811c9082168061122d57607f821691505b60208210810361124d57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161129157611291611269565b5060010190565b8082018082111561021f5761021f611269565b6040815260006112be60408301856110f7565b82810360208401526112d081856110f7565b95945050505050565b60006001600160a01b03808816835280871660208401525060a0604083015261130560a08301866110f7565b828103606084015261131781866110f7565b9050828103608084015261132b8185610ddd565b98975050505050505050565b60006020828403121561134957600080fd5b8151610dbd81610d87565b600060033d111561136d5760046000803e5060005160e01c5b90565b600060443d101561137e5790565b6040516003193d81016004833e81513d67ffffffffffffffff81602484011181841117156113ae57505050505090565b82850191508151818111156113c65750505050505090565b843d87010160208285010111156113e05750505050505090565b6113ef60208286010187610e4c565b509095945050505050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a0608083015261143260a0830184610ddd565b97965050505050505056fea2646970667358221220b81fe9f124c3739d251a517af0bb3aa049cca5520070c36cd06deb851e7e6f0d64736f6c63430008100033";

type ERC1155ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155__factory extends ContractFactory {
  constructor(...args: ERC1155ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    uri_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC1155> {
    return super.deploy(uri_, overrides || {}) as Promise<ERC1155>;
  }
  override getDeployTransaction(
    uri_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(uri_, overrides || {});
  }
  override attach(address: string): ERC1155 {
    return super.attach(address) as ERC1155;
  }
  override connect(signer: Signer): ERC1155__factory {
    return super.connect(signer) as ERC1155__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155Interface {
    return new utils.Interface(_abi) as ERC1155Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155 {
    return new Contract(address, _abi, signerOrProvider) as ERC1155;
  }
}
