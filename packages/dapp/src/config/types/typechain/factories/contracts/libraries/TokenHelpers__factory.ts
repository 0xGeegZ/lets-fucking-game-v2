/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  TokenHelpers,
  TokenHelpersInterface,
} from "../../../contracts/libraries/TokenHelpers";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FailedTransfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "getERC20Balance",
    outputs: [
      {
        internalType: "uint256",
        name: "_balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "getERC721TokenIds",
    outputs: [
      {
        internalType: "uint256[]",
        name: "_tokenIds",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x61076561003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100615760003560e01c806338aeac71146100665780635ab2d3001461008f578063b0e3fe37146100b1578063bbde570b146100d1578063c3a8962c146100f1575b600080fd5b610079610074366004610564565b610112565b6040516100869190610597565b60405180910390f35b81801561009b57600080fd5b506100af6100aa3660046105db565b610278565b005b8180156100bd57600080fd5b506100af6100cc366004610626565b610343565b8180156100dd57600080fd5b506100af6100ec3660046105db565b610469565b6101046100ff366004610564565b6104d1565b604051908152602001610086565b60606000836001600160a01b03166370a08231846040518263ffffffff1660e01b81526004016101429190610650565b602060405180830381865afa15801561015f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101839190610664565b6001600160401b0381111561019a5761019a61067d565b6040519080825280602002602001820160405280156101c3578160200160208202803683370190505b50905060005b815181101561027057604051632f745c5960e01b81526001600160a01b03861690632f745c59906102009087908590600401610693565b602060405180830381865afa15801561021d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102419190610664565b828281518110610253576102536106ac565b602090810291909101015280610268816106c2565b9150506101c9565b509392505050565b6040516323b872dd60e01b81526000906001600160a01b038616906323b872dd906102ab908790879087906004016106e9565b6020604051808303816000875af11580156102ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ee919061070d565b90508061033c5760405162461bcd60e51b8152602060048201526017602482015276105b5bdd5b9d081d1c985b9cd9995c9d0819985a5b1959604a1b60448201526064015b60405180910390fd5b5050505050565b80804710156103945760405162461bcd60e51b815260206004820152601e60248201527f4e6f7420656e6f75676820696e20636f6e74726163742062616c616e636500006044820152606401610333565b6000836001600160a01b03168360405160006040518083038185875af1925050503d80600081146103e1576040519150601f19603f3d011682016040523d82523d6000602084013e6103e6565b606091505b5050905080610463577f3506b32cea6b36a739c1c2a71a9e1b3d6222104389c07219059fa6eb6d2e05638484604051610420929190610693565b60405180910390a160405162461bcd60e51b815260206004820152601060248201526f2a3930b739b332b9103330b4b632b21760811b6044820152606401610333565b50505050565b6040516323b872dd60e01b81526001600160a01b038516906323b872dd90610499908690869086906004016106e9565b600060405180830381600087803b1580156104b357600080fd5b505af11580156104c7573d6000803e3d6000fd5b5050505050505050565b6040516370a0823160e01b81526000906001600160a01b038416906370a0823190610500908590600401610650565b602060405180830381865afa15801561051d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105419190610664565b9392505050565b80356001600160a01b038116811461055f57600080fd5b919050565b6000806040838503121561057757600080fd5b61058083610548565b915061058e60208401610548565b90509250929050565b6020808252825182820181905260009190848201906040850190845b818110156105cf578351835292840192918401916001016105b3565b50909695505050505050565b600080600080608085870312156105f157600080fd5b6105fa85610548565b935061060860208601610548565b925061061660408601610548565b9396929550929360600135925050565b6000806040838503121561063957600080fd5b61064283610548565b946020939093013593505050565b6001600160a01b0391909116815260200190565b60006020828403121561067657600080fd5b5051919050565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03929092168252602082015260400190565b634e487b7160e01b600052603260045260246000fd5b6000600182016106e257634e487b7160e01b600052601160045260246000fd5b5060010190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60006020828403121561071f57600080fd5b8151801515811461054157600080fdfea26469706673582212208653189f38d04ab0770778cfe73d680ad23b0cbdaa30b465087cbe5075930fa164736f6c63430008100033";

type TokenHelpersConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenHelpersConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenHelpers__factory extends ContractFactory {
  constructor(...args: TokenHelpersConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TokenHelpers> {
    return super.deploy(overrides || {}) as Promise<TokenHelpers>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TokenHelpers {
    return super.attach(address) as TokenHelpers;
  }
  override connect(signer: Signer): TokenHelpers__factory {
    return super.connect(signer) as TokenHelpers__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenHelpersInterface {
    return new utils.Interface(_abi) as TokenHelpersInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenHelpers {
    return new Contract(address, _abi, signerOrProvider) as TokenHelpers;
  }
}
