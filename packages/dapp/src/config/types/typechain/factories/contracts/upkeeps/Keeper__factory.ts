/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Keeper,
  KeeperInterface,
} from "../../../contracts/upkeeps/Keeper";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract CronUpkeep",
        name: "_cronUpkeep",
        type: "address",
      },
      {
        internalType: "string",
        name: "_encodedCron",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "jobId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "cronUpkeep",
        type: "address",
      },
    ],
    name: "CronUpkeepRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "jobId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "cronUpkeep",
        type: "address",
      },
    ],
    name: "CronUpkeepUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "jobId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "encodedCron",
        type: "string",
      },
    ],
    name: "EncodedCronUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "cronUpkeep",
    outputs: [
      {
        internalType: "contract CronUpkeep",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "encodedCron",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCronUpkeep",
    outputs: [
      {
        internalType: "contract CronUpkeep",
        name: "_cronUpkeep",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getEncodedCron",
    outputs: [
      {
        internalType: "string",
        name: "_encodedCron",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pauseKeeper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registerCronToUpkeep",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract CronUpkeep",
        name: "_cronUpkeep",
        type: "address",
      },
    ],
    name: "setCronUpkeep",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_encodedCron",
        type: "string",
      },
    ],
    name: "setEncodedCron",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpauseKeeper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200105f3803806200105f83398101604081905262000034916200017f565b6200003f3362000089565b6000805460ff60a01b19169055805162000061906003906020840190620000d9565b5050600280546001600160a01b0319166001600160a01b0392909216919091179055620002d2565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054620000e7906200027f565b90600052602060002090601f0160209004810192826200010b576000855562000156565b82601f106200012657805160ff191683800117855562000156565b8280016001018555821562000156579182015b828111156200015657825182559160200191906001019062000139565b506200016492915062000168565b5090565b5b8082111562000164576000815560010162000169565b600080604083850312156200019357600080fd5b82516001600160a01b0381168114620001ab57600080fd5b602084810151919350906001600160401b0380821115620001cb57600080fd5b818601915086601f830112620001e057600080fd5b815181811115620001f557620001f5620002bc565b604051601f8201601f19908116603f01168101908382118183101715620002205762000220620002bc565b8160405282815289868487010111156200023957600080fd5b600093505b828410156200025d57848401860151818501870152928501926200023e565b828411156200026f5760008684830101525b8096505050505050509250929050565b600181811c908216806200029457607f821691505b60208210811415620002b657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b610d7d80620002e26000396000f3fe608060405234801561001057600080fd5b50600436106100af5760003560e01c80634acb33a0146100b4578063558e4414146100e457806358cc0333146100f95780635c975abb1461010357806364be073b1461011b578063715018a61461012357806388f9eab41461012b5780638da5cb5b1461013e5780639b798e5c146101465780639be611001461014e578063a0dd526f14610156578063f2fde38b14610169578063ff2caa081461017c575b600080fd5b6002546100c7906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100ec610184565b6040516100db9190610bba565b610101610212565b005b61010b61026e565b60405190151581526020016100db565b6100c761027e565b610101610298565b610101610139366004610a1a565b6102ac565b6100c76102c0565b6101016102cf565b6100ec610346565b61010161016436600461097b565b6103e0565b61010161017736600461097b565b610458565b6101016104d3565b6003805461019190610ce1565b80601f01602080910402602001604051908101604052809291908181526020018280546101bd90610ce1565b801561020a5780601f106101df5761010080835404028352916020019161020a565b820191906000526020600020905b8154815290600101906020018083116101ed57829003601f168201915b505050505081565b61021a610575565b6102226105d4565b6001546002546040517f967edc169058f4cc6ee1336d975d194ac04b9eef04cab44cab8a6104ded9aab8926102649290916001600160a01b0390911690610c22565b60405180910390a1565b600054600160a01b900460ff1690565b6000610288610575565b506002546001600160a01b031690565b6102a0610575565b6102aa6000610781565b565b6102b4610575565b6102bd816107d1565b50565b6000546001600160a01b031690565b6102d761084f565b60025460015460405163ea87605b60e01b81526001600160a01b039092169163ea87605b9161030c9160040190815260200190565b600060405180830381600087803b15801561032657600080fd5b505af115801561033a573d6000803e3d6000fd5b50506103e76001555050565b6060610350610575565b6003805461035d90610ce1565b80601f016020809104026020016040519081016040528092919081815260200182805461038990610ce1565b80156103d65780601f106103ab576101008083540402835291602001916103d6565b820191906000526020600020905b8154815290600101906020018083116103b957829003601f168201915b5050505050905090565b6103e8610575565b600280546001600160a01b0319166001600160a01b03831617905561040b6105d4565b6001546002546040517f8c854ed724454b96374a0bb77a40779bdb1a2e30599d0c87b37a3dcd9ef456369261044d9290916001600160a01b0390911690610c22565b60405180910390a150565b610460610575565b6001600160a01b0381166104ca5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6102bd81610781565b6104db610897565b6002546001600160a01b03166105335760405162461bcd60e51b815260206004820152601d60248201527f4b6565706572206e65656420746f20626520696e697469616c6973656400000060448201526064016104c1565b6003805461054090610ce1565b151590506105605760405162461bcd60e51b81526004016104c190610be0565b6103e76001541461056d57565b6102aa6105d4565b3361057e6102c0565b6001600160a01b0316146102aa5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104c1565b6105dc610575565b6002546040805163448ae98b60e01b815290516000926001600160a01b03169163448ae98b916004808301926020929190829003018186803b15801561062157600080fd5b505afa158015610635573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106599190610a94565b600181905560405163e04b976960e01b815290915060009073__$2a5f91f3b8d172a11a2b02e40add8b4c78$__9063e04b97699061069c90600390600401610bcd565b60006040518083038186803b1580156106b457600080fd5b505af41580156106c8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106f0919081019061099f565b6002546040805160048082526024820183526020820180516001600160e01b031663595bef2f60e11b17905291516380fc37b360e01b81529394506001600160a01b03909216926380fc37b39261074b923092879101610b7a565b600060405180830381600087803b15801561076557600080fd5b505af1158015610779573d6000803e3d6000fd5b505050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6107d9610897565b6107e1610575565b80516107ff5760405162461bcd60e51b81526004016104c190610be0565b80516108129060039060208401906108e2565b5061081b6105d4565b7f99e95fbe7400e59e10d99096b3cbff90483a22a02d077e8e2f1a7b027cf00487600154600360405161044d929190610c39565b61085761026e565b156102aa5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016104c1565b61089f61026e565b6102aa5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016104c1565b8280546108ee90610ce1565b90600052602060002090601f0160209004810192826109105760008555610956565b82601f1061092957805160ff1916838001178555610956565b82800160010185558215610956579182015b8281111561095657825182559160200191906001019061093b565b50610962929150610966565b5090565b5b808211156109625760008155600101610967565b60006020828403121561098d57600080fd5b813561099881610d32565b9392505050565b6000602082840312156109b157600080fd5b81516001600160401b038111156109c757600080fd5b8201601f810184136109d857600080fd5b80516109eb6109e682610c8a565b610c5a565b818152856020838501011115610a0057600080fd5b610a11826020830160208601610cb1565b95945050505050565b600060208284031215610a2c57600080fd5b81356001600160401b03811115610a4257600080fd5b8201601f81018413610a5357600080fd5b8035610a616109e682610c8a565b818152856020838501011115610a7657600080fd5b81602084016020830137600091810160200191909152949350505050565b600060208284031215610aa657600080fd5b5051919050565b60008151808452610ac5816020860160208601610cb1565b601f01601f19169290920160200192915050565b8054600090600181811c9080831680610af357607f831692505b6020808410821415610b1557634e487b7160e01b600052602260045260246000fd5b838852818015610b2c5760018114610b4057610b6e565b60ff19861689830152604089019650610b6e565b876000528160002060005b86811015610b665781548b8201850152908501908301610b4b565b8a0183019750505b50505050505092915050565b6001600160a01b0384168152606060208201819052600090610b9e90830185610aad565b8281036040840152610bb08185610aad565b9695505050505050565b6020815260006109986020830184610aad565b6020815260006109986020830184610ad9565b60208082526022908201527f4b65657065722063726f6e206e65656420746f20626520696e697469616c6973604082015261195960f21b606082015260800190565b9182526001600160a01b0316602082015260400190565b828152604060208201526000610c526040830184610ad9565b949350505050565b604051601f8201601f191681016001600160401b0381118282101715610c8257610c82610d1c565b604052919050565b60006001600160401b03821115610ca357610ca3610d1c565b50601f01601f191660200190565b60005b83811015610ccc578181015183820152602001610cb4565b83811115610cdb576000848401525b50505050565b600181811c90821680610cf557607f821691505b60208210811415610d1657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146102bd57600080fdfea26469706673582212205d410a6430e8375ef4852e2edcbc98d6ae792e40e1d4bdaf0fbb8cca6830becc64736f6c63430008060033";

type KeeperConstructorParams =
  | [linkLibraryAddresses: KeeperLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: KeeperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class Keeper__factory extends ContractFactory {
  constructor(...args: KeeperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, Keeper__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: KeeperLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$2a5f91f3b8d172a11a2b02e40add8b4c78\\$__", "g"),
      linkLibraryAddresses[
        "@chainlink/contracts/src/v0.8/libraries/external/Cron.sol:Cron"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    _cronUpkeep: PromiseOrValue<string>,
    _encodedCron: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Keeper> {
    return super.deploy(
      _cronUpkeep,
      _encodedCron,
      overrides || {}
    ) as Promise<Keeper>;
  }
  override getDeployTransaction(
    _cronUpkeep: PromiseOrValue<string>,
    _encodedCron: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _cronUpkeep,
      _encodedCron,
      overrides || {}
    );
  }
  override attach(address: string): Keeper {
    return super.attach(address) as Keeper;
  }
  override connect(signer: Signer): Keeper__factory {
    return super.connect(signer) as Keeper__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KeeperInterface {
    return new utils.Interface(_abi) as KeeperInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Keeper {
    return new Contract(address, _abi, signerOrProvider) as Keeper;
  }
}

export interface KeeperLibraryAddresses {
  ["@chainlink/contracts/src/v0.8/libraries/external/Cron.sol:Cron"]: string;
}
