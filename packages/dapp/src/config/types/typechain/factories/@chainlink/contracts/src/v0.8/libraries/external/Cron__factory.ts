/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../../common";
import type {
  Cron,
  CronInterface,
} from "../../../../../../../@chainlink/contracts/src/v0.8/libraries/external/Cron";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "field",
        type: "string",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "InvalidField",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "InvalidSpec",
    type: "error",
  },
  {
    inputs: [],
    name: "ListTooLarge",
    type: "error",
  },
  {
    inputs: [],
    name: "UnknownFieldType",
    type: "error",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "minute",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "hour",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "day",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "month",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "dayOfWeek",
            type: "tuple",
          },
        ],
        internalType: "struct Spec",
        name: "spec",
        type: "tuple",
      },
    ],
    name: "lastTick",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "minute",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "hour",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "day",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "month",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "dayOfWeek",
            type: "tuple",
          },
        ],
        internalType: "struct Spec",
        name: "spec",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "matches",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "minute",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "hour",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "day",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "month",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "dayOfWeek",
            type: "tuple",
          },
        ],
        internalType: "struct Spec",
        name: "spec",
        type: "tuple",
      },
    ],
    name: "nextTick",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "minute",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "hour",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "day",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "month",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "dayOfWeek",
            type: "tuple",
          },
        ],
        internalType: "struct Spec",
        name: "spec",
        type: "tuple",
      },
    ],
    name: "toCronString",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "cronString",
        type: "string",
      },
    ],
    name: "toEncodedSpec",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "cronString",
        type: "string",
      },
    ],
    name: "toSpec",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "minute",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "hour",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "day",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "month",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "dayOfWeek",
            type: "tuple",
          },
        ],
        internalType: "struct Spec",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x612da961003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061007c5760003560e01c8063b70d69701161005a578063b70d6970146100e7578063bddee373146100fa578063e04b97691461011d57600080fd5b806334373a3b1461008157806336d24def146100a7578063a1ab24f4146100c7575b600080fd5b61009461008f366004612432565b610130565b6040519081526020015b60405180910390f35b6100ba6100b53660046123c0565b61014f565b60405161009e9190612949565b6100da6100d5366004612432565b61019d565b60405161009e91906128b6565b6100946100f5366004612432565b6101b6565b61010d61010836600461244f565b6101cf565b604051901515815260200161009e565b6100da61012b3660046123c0565b6101ea565b60006101496101443684900384018461247c565b61022b565b92915050565b610157612192565b61019683838080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506103dd92505050565b9392505050565b60606101496101b13684900384018461247c565b6105dc565b60006101496101ca3684900384018461247c565b610649565b6000610196826101e43686900386018661247c565b906107e1565b606061019683838080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061085492505050565b6000806102374261086f565b9050600061024442610964565b9050600061025142610979565b9050600061025e4261098e565b9050600061026b426109b2565b905060005b600c8560ff16116103c7576102898860600151866109c0565b61029e576001935060009250600091506103b5565b60006102aa8688610b22565b90505b8060ff168560ff16116103af576102c88960400151866109c0565b6102d957600093506000925061039d565b6102ec6102e7888888610be8565b610bfa565b91506102fc8960800151836109c0565b61030d57600093506000925061039d565b60188460ff161015610398576103278960200151856109c0565b6103345760009250610386565b603c8360ff16101561038157885161034c90846109c0565b6103555761036f565b6103628787878787610c16565b9998505050505050505050565b8261037981612c8e565b935050610334565b600092505b8361039081612c8e565b94505061030d565b600093505b846103a781612c8e565b9550506102ad565b60019450505b846103bf81612c8e565b955050610270565b60019450856103d581612c51565b965050610270565b6103e5612192565b60408051808201825260018152600160fd1b60208083019182528351808501855260008082529082018190528451808601865293518452838201929092528351808501855282815281019190915282518084019093528451835284810190830152906104518183610c31565b6004146104a6576040516357b234a760e11b815260206004820152601160248201527f342073706163657320726571756972656400000000000000000000000000000060448201526064015b60405180910390fd5b60006104b28284610cd2565b905060006104c08385610cd2565b905060006104ce8486610cd2565b905060006104dc8587610cd2565b90506104e784610cf1565b15806104f957506104f783610cf1565b155b8061050a575061050882610cf1565b155b8061051b575061051981610cf1565b155b8061052c575061052a85610cf1565b155b1561057a576040516357b234a760e11b815260206004820152601360248201527f736f6d65206669656c6473206d697373696e6700000000000000000000000000604482015260640161049d565b6105d06040518060a0016040528061059187610dca565b815260200161059f86610dca565b81526020016105ad85610dca565b81526020016105bb84610dca565b81526020016105c988610dca565b905261102f565b98975050505050505050565b60606105eb826000015161113d565b6105f8836020015161113d565b610605846040015161113d565b610612856060015161113d565b61061f866080015161113d565b60405160200161063395949392919061261e565b6040516020818303038152906040529050919050565b6000806106554261086f565b9050600061066242610964565b9050600061066f42610979565b9050600061067c4261098e565b90506000610689426109b2565b90506000805b60ff8616156107cb576106a68960600151876109c0565b6106ba575060179250603b915060016107b9565b80156106cd576106ca8688610b22565b94505b60ff8516156107b5576106e48960400151866109c0565b6106f55760179350603b92506107a3565b6107036102e7888888610be8565b91506107138960800151836109c0565b6107245760179350603b92506107a3565b6107328960200151856109c0565b61074c57603b925060ff84166107475761079e565b61078c565b885161075890846109c0565b6103555760ff83166107695761077b565b8261077381612c3e565b93505061074c565b603b925060ff841661078c5761079e565b8361079681612c3e565b945050610724565b601793505b846107ad81612c3e565b9550506106cd565b5060015b856107c381612c3e565b96505061068f565b600c9550866107d981612c09565b97505061068f565b6000806107ed836112c2565b9050610801846060015182602001516109c0565b801561081a575061081a846040015182604001516109c0565b80156108335750610833846020015182606001516109c0565b801561084c575061084c846000015182608001516109c0565b949350505050565b606061085f826103dd565b6040516020016106339190612949565b60008080806108826301e13380866129e9565b61088e906107b26129ac565b915061089b6107b26114aa565b6108a88361ffff166114aa565b6108b29190612ba3565b90506108c2816301e28500612ae8565b6108cc90846129ac565b9250806108db6107b284612b80565b61ffff166108e99190612ba3565b6108f7906301e13380612ae8565b61090190846129ac565b92505b8483111561095c5761091f61091a600184612b80565b6114ef565b15610939576109326301e2850084612ba3565b925061094a565b6109476301e1338084612ba3565b92505b610955600183612b80565b9150610904565b509392505050565b600061096f826112c2565b6020015192915050565b6000610984826112c2565b6040015192915050565b60006018603c61099e81856129e9565b6109a891906129e9565b6101499190612ccf565b6000603c6109a881846129e9565b600080835160048111156109d6576109d6612d31565b14156109e457506001610149565b6002835160048111156109f9576109f9612d31565b1415610a19576040830151610a0e9083612ce3565b60ff16159050610149565b600183516004811115610a2e57610a2e612d31565b1415610a4857826020015160ff168260ff16149050610149565b600383516004811115610a5d57610a5d612d31565b1415610a8e57826060015160ff168260ff1610158015610a875750826080015160ff168260ff1611155b9050610149565b600483516004811115610aa357610aa3612d31565b1415610b095760005b8360a0015160ff16811015610aff578360c0015181601a8110610ad157610ad1612d47565b602002015160ff168360ff161415610aed576001915050610149565b80610af781612c73565b915050610aac565b5060009050610149565b604051637d8d432960e01b815260040160405180910390fd5b60008260ff1660011480610b3957508260ff166003145b80610b4757508260ff166005145b80610b5557508260ff166007145b80610b6357508260ff166008145b80610b7157508260ff16600a145b80610b7f57508260ff16600c145b15610b8c5750601f610149565b8260ff1660041480610ba157508260ff166006145b80610baf57508260ff166009145b80610bbd57508260ff16600b145b15610bca5750601e610149565b610bd3826114ef565b15610be05750601d610149565b50601c610149565b600061084c848484600080600061154e565b60006007610c0b62015180846129e9565b6109a89060046129ac565b6000610c278686868686600061154e565b9695505050505050565b6000808260000151610c5585600001518660200151866000015187602001516116f2565b610c5f91906129ac565b90505b83516020850151610c7391906129ac565b8111610ccb5781610c8381612c73565b9250508260000151610cba856020015183610c9e9190612ba3565b8651610caa9190612ba3565b83866000015187602001516116f2565b610cc491906129ac565b9050610c62565b5092915050565b6040805180820190915260008082526020820152610ccb838383611813565b600080601f8360200151610d059190612ba3565b8351909150600090610d1790836129ac565b9050600092505b80821015610dc357815160ff166080811015610d4657610d3f6001846129ac565b9250610db0565b60e08160ff161015610d5d57610d3f6002846129ac565b60f08160ff161015610d7457610d3f6003846129ac565b60f88160ff161015610d8b57610d3f6004846129ac565b60fc8160ff161015610da257610d3f6005846129ac565b610dad6006846129ac565b92505b5082610dbb81612c73565b935050610d1e565b5050919050565b610dd26121de565b6040805180820182526001808252601560f91b602080840191825284518086018652600080825290820181905285518087018752945185528482019290925284518086018652838152602d60f81b81830190815286518088018852848152830184905286518088018852915182528183015285518087018752848152602f60f81b81840190815287518089018952858152840185905287518089018952915182528184015286518088018852948552600b60fa1b85840190815287518089018952858152840194909452865180880190975293518652908501919091529192610eb96121de565b610ec387866118bf565b15610ed15760008152610c27565b610edb87856118d3565b15610f1a57600381526000610ef08886610cd2565b9050610efb816118fa565b60ff166060830152610f0c886118fa565b60ff16608083015250610c27565b610f2487846118d3565b15610f4e5760028152610f378784610cd2565b50610f41876118fa565b60ff166040820152610c27565b610f5887836118d3565b15611010576004815260408051808201909152600080825260208201525b6000610f8189610cf1565b111561100a5760198260a0015160ff161115610fb0576040516388b27b5f60e01b815260040160405180910390fd5b610fba8884610cd2565b9050610fc5816118fa565b8260c001518360a0015160ff16601a8110610fe257610fe2612d47565b60ff909216602092909202015260a08201805190610fff82612c8e565b60ff16905250610f76565b50610c27565b6001815261101d876118fa565b60ff1660208201529695505050505050565b611037612192565b61106c82608001516040518060400160405280600b81526020016a646179206f66207765656b60a81b81525060006006611989565b61109b8260600151604051806040016040528060058152602001640dadedce8d60db1b8152506001600c611989565b60006110aa8360600151611c2b565b90506110d883604001516040518060400160405280600381526020016264617960e81b815250600184611989565b6111068360200151604051806040016040528060048152602001633437bab960e11b81525060006017611989565b6111368360000151604051806040016040528060068152602001656d696e75746560d01b8152506000603b611989565b5090919050565b606060008251600481111561115457611154612d31565b14156111775750506040805180820190915260018152601560f91b602082015290565b60018251600481111561118c5761118c612d31565b14156111a257610149826020015160ff16611d78565b6003825160048111156111b7576111b7612d31565b14156111ee576111cd826060015160ff16611d78565b6111dd836080015160ff16611d78565b6040516020016106339291906126b4565b60028251600481111561120357611203612d31565b141561122957611219826040015160ff16611d78565b6040516020016106339190612757565b60048251600481111561123e5761123e612d31565b1415610b095760c082015160009061125f90825b602002015160ff16611d78565b905060015b8360a0015160ff16811015610ccb578161128d8560c0015183601a811061125257611252612d47565b60405160200161129e9291906125e2565b604051602081830303815290604052915080806112ba90612c73565b915050611264565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c081018290529080806113068561086f565b61ffff1684526113176107b26114aa565b84516113269061ffff166114aa565b6113309190612ba3565b9150611340826301e28500612ae8565b61134a90846129ac565b9250816107b2856000015161135f9190612b80565b61ffff1661136d9190612ba3565b61137b906301e13380612ae8565b61138590846129ac565b92506000600191505b600c8260ff16116113f6576113a7828660000151610b22565b6113b79060ff1662015180612ae8565b9050856113c485836129ac565b11156113d85760ff821660208601526113f6565b6113e281856129ac565b9350816113ee81612c8e565b92505061138e565b600191505b61140d85602001518660000151610b22565b60ff168260ff161161145c578561142785620151806129ac565b111561143b5760ff8216604086015261145c565b61144862015180856129ac565b93508161145481612c8e565b9250506113fb565b6114658661098e565b60ff166060860152611476866109b2565b60ff16608086015261148786611eb9565b60ff1660a086015261149886610bfa565b60ff1660c08601525092949350505050565b60006114b7600183612ba3565b91506114c5610190836129e9565b6114d06064846129e9565b6114db6004856129e9565b6114e59190612ba3565b61014991906129ac565b60006114fc600483612cae565b61ffff161561150d57506000919050565b611518606483612cae565b61ffff161561152957506001919050565b61153561019083612cae565b61ffff161561154657506000919050565b506001919050565b60006107b25b8761ffff168161ffff1610156115aa5761156d816114ef565b15611587576115806301e28500836129ac565b9150611598565b6115956301e13380836129ac565b91505b806115a281612c51565b915050611554565b6115b261221c565b601f81526115bf896114ef565b156115d057601d60208201526115d8565b601c60208201525b601f60408201819052601e606083018190526080830182905260a0830181905260c0830182905260e0830182905261010083018190526101208301829052610140830152610160820152600191505b8760ff168261ffff1610156116895780611642600184612b80565b61ffff16600c811061165657611656612d47565b602002015161166b9060ff1662015180612ae8565b61167590846129ac565b92508161168181612c51565b925050611627565b611694600188612bba565b6116a49060ff1662015180612ae8565b6116ae90846129ac565b92506116bf60ff8716610e10612ae8565b6116c990846129ac565b92506116d960ff8616603c612ae8565b6116e390846129ac565b925061036260ff8516846129ac565b600083818685116117fe57602085116117ac576000851561173e57600161171a876020612ba3565b611725906008612ae8565b611730906002612a40565b61173a9190612ba3565b1990505b8451811660008761174f8b8b6129ac565b6117599190612ba3565b855190915083165b82811461179e57818610611786576117798b8b6129ac565b965050505050505061084c565b8561179081612c73565b965050838651169050611761565b85965050505050505061084c565b508383206000905b6117be8689612ba3565b82116117fc57858320818114156117db578394505050505061084c565b6117e66001856129ac565b93505081806117f490612c73565b9250506117b4565b505b61180887876129ac565b979650505050505050565b6040805180820190915260008082526020820152600061184585600001518660200151866000015187602001516116f2565b6020808701805191860191909152519091506118619082612ba3565b83528451602086015161187491906129ac565b81141561188457600085526118b6565b8351835161189291906129ac565b855186906118a1908390612ba3565b90525083516118b090826129ac565b60208601525b50909392505050565b60006118cb8383611ec6565b159392505050565b60208083015183518351928401516000936118f19291849190611fa1565b14159392505050565b600080611906836120b3565b90506000805b82518260ff16101561084c576000838360ff168151811061192f5761192f612d47565b016020015160f81c90506030811080159061194e575060398160ff1611155b156119765761195e603082612bba565b61196983600a612b07565b61197391906129c4565b91505b508161198181612c8e565b92505061190c565b60008451600481111561199e5761199e612d31565b14156119a957611c25565b6001845160048111156119be576119be612d31565b1415611a48578160ff16846020015160ff1610806119e557508060ff16846020015160ff16115b15611a435760006119f88360ff16611d78565b611a048360ff16611d78565b604051602001611a159291906127e6565b6040516020818303038152906040529050838160405163081a25d560e21b815260040161049d9291906128c9565b611c25565b600284516004811115611a5d57611a5d612d31565b1415611ab0576001846040015160ff161080611a8257508060ff16846040015160ff16115b15611a43576000611a936001611d78565b611a9f8360ff16611d78565b604051602001611a159291906126e4565b600384516004811115611ac557611ac5612d31565b1415611b21578060ff16846080015160ff161180611af15750836060015160ff16846080015160ff1611155b15611a43576000611b048360ff16611d78565b611b108360ff16611d78565b604051602001611a15929190612851565b600484516004811115611b3657611b36612d31565b1415610b095760028460a0015160ff161015611b67578260405163081a25d560e21b815260040161049d91906128f7565b6000611b758360ff16611d78565b611b818360ff16611d78565b604051602001611b92929190612781565b60408051601f1981840301815291905290506000805b8660a0015160ff16811015611c21578660c0015181601a8110611bcd57611bcd612d47565b602002015191508460ff168260ff161080611bed57508360ff168260ff16115b15611c0f57858360405163081a25d560e21b815260040161049d9291906128c9565b80611c1981612c73565b915050611ba8565b5050505b50505050565b60008082516004811115611c4157611c41612d31565b1480611c5f5750600382516004811115611c5d57611c5d612d31565b145b15611c6c5750601f919050565b600182516004811115611c8157611c81612d31565b1415611c965761014982602001516004610b22565b600282516004811115611cab57611cab612d31565b1415611ce357816040015160ff1660091480611cce5750816040015160ff16600b145b15611cdb5750601e919050565b50601f919050565b600482516004811115611cf857611cf8612d31565b1415610b09576000805b8360a0015160ff16811015610ccb576000611d388560c0015183601a8110611d2c57611d2c612d47565b60200201516004610b22565b90508060ff16601f1415611d4e57949350505050565b8260ff168160ff161115611d60578092505b5080611d6b81612c73565b915050611d02565b919050565b606081611d9c5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611dc65780611db081612c73565b9150611dbf9050600a836129e9565b9150611da0565b60008167ffffffffffffffff811115611de157611de1612d5d565b6040519080825280601f01601f191660200182016040528015611e0b576020820181803683370190505b509050815b8515611eb057611e21600182612ba3565b90506000611e30600a886129e9565b611e3b90600a612ae8565b611e459088612ba3565b611e509060306129c4565b905060008160f81b905080848481518110611e6d57611e6d612d47565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350611ea7600a896129e9565b97505050611e10565b50949350505050565b6000610149603c83612ccf565b8151815160009190811115611ed9575081515b6020808501519084015160005b83811015611f925782518251808214611f62576000196020871015611f4157600184611f13896020612ba3565b611f1d91906129ac565b611f28906008612ae8565b611f33906002612a40565b611f3d9190612ba3565b1990505b8181168382168181039114611f5f5797506101499650505050505050565b50505b611f6d6020866129ac565b9450611f7a6020856129ac565b93505050602081611f8b91906129ac565b9050611ee6565b5084518651610c279190612b28565b6000808584116120a957602084116120545760008415611fec576001611fc8866020612ba3565b611fd3906008612ae8565b611fde906002612a40565b611fe89190612ba3565b1990505b8351811685611ffb89896129ac565b6120059190612ba3565b805190935082165b81811461203f57878411612027578794505050505061084c565b8361203181612c27565b94505082845116905061200d565b61204987856129ac565b94505050505061084c565b8383206120618588612ba3565b61206b90876129ac565b91505b8582106120a757848220818114156120945761208a86846129ac565b935050505061084c565b61209f600184612ba3565b92505061206e565b505b5092949350505050565b60606000826000015167ffffffffffffffff8111156120d4576120d4612d5d565b6040519080825280601f01601f1916602001820160405280156120fe576020820181803683370190505b5090506000602082019050610ccb81856020015186600001515b60208110612150578151835261212f6020846129ac565b925061213c6020836129ac565b9150612149602082612ba3565b9050612118565b600019811561217f576001612166836020612ba3565b61217290610100612a40565b61217c9190612ba3565b90505b9151835183169219169190911790915250565b6040518060a001604052806121a56121de565b81526020016121b26121de565b81526020016121bf6121de565b81526020016121cc6121de565b81526020016121d96121de565b905290565b6040805160e08101909152806000815260006020820181905260408201819052606082018190526080820181905260a082015260c0016121d961223b565b604051806101800160405280600c906020820280368337509192915050565b604051806103400160405280601a906020820280368337509192915050565b600082601f83011261226b57600080fd5b60405161034080820182811067ffffffffffffffff8211171561229057612290612d5d565b60405281848281018710156122a457600080fd5b600092505b601a8310156122d0576122bb816123af565b825260019290920191602091820191016122a9565b509195945050505050565b600061040082840312156122ee57600080fd5b60405160e0810181811067ffffffffffffffff8211171561231157612311612d5d565b60405290508082356005811061232657600080fd5b8152612334602084016123af565b6020820152612345604084016123af565b6040820152612356606084016123af565b6060820152612367608084016123af565b608082015261237860a084016123af565b60a082015261238a8460c0850161225a565b60c08201525092915050565b600061140082840312156123a957600080fd5b50919050565b803560ff81168114611d7357600080fd5b600080602083850312156123d357600080fd5b823567ffffffffffffffff808211156123eb57600080fd5b818501915085601f8301126123ff57600080fd5b81358181111561240e57600080fd5b86602082850101111561242057600080fd5b60209290920196919550909350505050565b6000611400828403121561244557600080fd5b6101968383612396565b600080611420838503121561246357600080fd5b61246d8484612396565b94611400939093013593505050565b6000611400828403121561248f57600080fd5b60405160a0810181811067ffffffffffffffff821117156124b2576124b2612d5d565b6040526124bf84846122db565b81526124cf8461040085016122db565b60208201526124e28461080085016122db565b60408201526124f584610c0085016122db565b60608201526125088461100085016122db565b60808201529392505050565b8060005b601a811015611c2557815160ff16845260209384019390910190600101612518565b60008151808452612552816020860160208601612bdd565b601f01601f19169290920160200192915050565b80516005811061258657634e487b7160e01b600052602160045260246000fd5b8083525060ff602082015116602083015260ff604082015116604083015260ff606082015116606083015260ff608082015116608083015260ff60a08201511660a083015260c08101516125dd60c0840182612514565b505050565b600083516125f4818460208801612bdd565b600b60fa1b9083019081528351612612816001840160208801612bdd565b01600101949350505050565b60008651612630818460208b01612bdd565b8083019050600160fd1b8082528751612650816001850160208c01612bdd565b60019201918201819052865161266d816002850160208b01612bdd565b60029201918201819052855161268a816003850160208a01612bdd565b600392019182015283516126a5816004840160208801612bdd565b01600401979650505050505050565b600083516126c6818460208801612bdd565b602d60f81b9083019081528351612612816001840160208801612bdd565b7f696e76657276616c206d757374206265202a2f2800000000000000000000000081526000835161271c816014850160208801612bdd565b602d60f81b601491840191820152835161273d816015840160208801612bdd565b602960f81b60159290910191820152601601949350505050565b612a2f60f01b815260008251612774816002850160208701612bdd565b9190910160020192915050565b7f6974656d7320696e206c697374206d7573742062652077697468696e200000008152600083516127b981601d850160208801612bdd565b602d60f81b601d9184019182015283516127da81601e840160208801612bdd565b01601e01949350505050565b7f76616c7565206d757374206265203e3d2c00000000000000000000000000000081526000835161281e816011850160208801612bdd565b6620616e64203c3d60c81b6011918401918201528351612845816018840160208801612bdd565b01601801949350505050565b7f696e76657276616c206d7573742062652077697468696e200000000000000000815260008351612889816018850160208801612bdd565b602d60f81b60189184019182015283516128aa816019840160208801612bdd565b01601901949350505050565b602081526000610196602083018461253a565b6040815260006128dc604083018561253a565b82810360208401526128ee818561253a565b95945050505050565b60408152600061290a604083018461253a565b8281036020840152602081527f6c69737473206d7573742068617665206174206c656173742032206974656d7360208201526040810191505092915050565b60006114008201905061295d828451612566565b6020830151612970610400840182612566565b506040830151612984610800840182612566565b506060830151612998610c00840182612566565b506080830151610ccb611000840182612566565b600082198211156129bf576129bf612d05565b500190565b600060ff821660ff84168060ff038211156129e1576129e1612d05565b019392505050565b6000826129f8576129f8612d1b565b500490565b600181815b80851115612a38578160001904821115612a1e57612a1e612d05565b80851615612a2b57918102915b93841c9390800290612a02565b509250929050565b60006101968383600082612a5657506001610149565b81612a6357506000610149565b8160018114612a795760028114612a8357612a9f565b6001915050610149565b60ff841115612a9457612a94612d05565b50506001821b610149565b5060208310610133831016604e8410600b8410161715612ac2575081810a610149565b612acc83836129fd565b8060001904821115612ae057612ae0612d05565b029392505050565b6000816000190483118215151615612b0257612b02612d05565b500290565b600060ff821660ff84168160ff0481118215151615612ae057612ae0612d05565b60008083128015600160ff1b850184121615612b4657612b46612d05565b837f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff018313811615612b7a57612b7a612d05565b50500390565b600061ffff83811690831681811015612b9b57612b9b612d05565b039392505050565b600082821015612bb557612bb5612d05565b500390565b600060ff821660ff841680821015612bd457612bd4612d05565b90039392505050565b60005b83811015612bf8578181015183820152602001612be0565b83811115611c255750506000910152565b600061ffff821680612c1d57612c1d612d05565b6000190192915050565b600081612c3657612c36612d05565b506000190190565b600060ff821680612c1d57612c1d612d05565b600061ffff80831681811415612c6957612c69612d05565b6001019392505050565b6000600019821415612c8757612c87612d05565b5060010190565b600060ff821660ff811415612ca557612ca5612d05565b60010192915050565b600061ffff80841680612cc357612cc3612d1b565b92169190910692915050565b600082612cde57612cde612d1b565b500690565b600060ff831680612cf657612cf6612d1b565b8060ff84160691505092915050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220d93c053b26616db07f47fcb41abb522709ae3445c45fc9a26bef891c472afd5e64736f6c63430008060033";

type CronConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CronConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Cron__factory extends ContractFactory {
  constructor(...args: CronConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Cron> {
    return super.deploy(overrides || {}) as Promise<Cron>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Cron {
    return super.attach(address) as Cron;
  }
  override connect(signer: Signer): Cron__factory {
    return super.connect(signer) as Cron__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CronInterface {
    return new utils.Interface(_abi) as CronInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Cron {
    return new Contract(address, _abi, signerOrProvider) as Cron;
  }
}
