/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../../common";
import type {
  Cron,
  CronInterface,
} from "../../../../../../../@chainlink/contracts/src/v0.8/libraries/external/Cron";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "field",
        type: "string",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "InvalidField",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "InvalidSpec",
    type: "error",
  },
  {
    inputs: [],
    name: "ListTooLarge",
    type: "error",
  },
  {
    inputs: [],
    name: "UnknownFieldType",
    type: "error",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "minute",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "hour",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "day",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "month",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "dayOfWeek",
            type: "tuple",
          },
        ],
        internalType: "struct Spec",
        name: "spec",
        type: "tuple",
      },
    ],
    name: "lastTick",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "minute",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "hour",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "day",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "month",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "dayOfWeek",
            type: "tuple",
          },
        ],
        internalType: "struct Spec",
        name: "spec",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "matches",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "minute",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "hour",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "day",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "month",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "dayOfWeek",
            type: "tuple",
          },
        ],
        internalType: "struct Spec",
        name: "spec",
        type: "tuple",
      },
    ],
    name: "nextTick",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "minute",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "hour",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "day",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "month",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "dayOfWeek",
            type: "tuple",
          },
        ],
        internalType: "struct Spec",
        name: "spec",
        type: "tuple",
      },
    ],
    name: "toCronString",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "cronString",
        type: "string",
      },
    ],
    name: "toEncodedSpec",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "cronString",
        type: "string",
      },
    ],
    name: "toSpec",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "minute",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "hour",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "day",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "month",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum FieldType",
                name: "fieldType",
                type: "FieldType",
              },
              {
                internalType: "uint8",
                name: "singleValue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "interval",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeStart",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "rangeEnd",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "listLength",
                type: "uint8",
              },
              {
                internalType: "uint8[26]",
                name: "list",
                type: "uint8[26]",
              },
            ],
            internalType: "struct Field",
            name: "dayOfWeek",
            type: "tuple",
          },
        ],
        internalType: "struct Spec",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x612cd761003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061006c5760003560e01c806334373a3b1461007157806336d24def14610097578063a1ab24f4146100b7578063b70d6970146100d7578063bddee373146100ea578063e04b97691461010d575b600080fd5b61008461007f366004612394565b610120565b6040519081526020015b60405180910390f35b6100aa6100a5366004612323565b61013f565b60405161008e9190612890565b6100ca6100c5366004612394565b61018d565b60405161008e91906127fd565b6100846100e5366004612394565b6101a6565b6100fd6100f83660046123b1565b6101bf565b604051901515815260200161008e565b6100ca61011b366004612323565b6101da565b6000610139610134368490038401846123de565b61021b565b92915050565b6101476120dd565b61018683838080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506103cd92505050565b9392505050565b60606101396101a1368490038401846123de565b610587565b60006101396101ba368490038401846123de565b6105f4565b6000610186826101d4368690038601866123de565b9061078c565b606061018683838080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506107ff92505050565b6000806102274261081a565b905060006102344261090f565b9050600061024142610924565b9050600061024e42610939565b9050600061025b4261095d565b905060005b600c8560ff16116103b75761027988606001518661096b565b61028e576001935060009250600091506103a5565b600061029a8688610acd565b90505b8060ff168560ff161161039f576102b889604001518661096b565b6102c957600093506000925061038d565b6102dc6102d7888888610b93565b610ba5565b91506102ec89608001518361096b565b6102fd57600093506000925061038d565b60188460ff1610156103885761031789602001518561096b565b6103245760009250610376565b603c8360ff16101561037157885161033c908461096b565b6103455761035f565b6103528787878787610bc1565b9998505050505050505050565b8261036981612bbc565b935050610324565b600092505b8361038081612bbc565b9450506102fd565b600093505b8461039781612bbc565b95505061029d565b60019450505b846103af81612bbc565b955050610260565b60019450856103c581612b7f565b965050610260565b6103d56120dd565b60006103f9604051806040016040528060018152602001600160fd1b815250610bdc565b9050600061040684610bdc565b90506104128183610c02565b60041461045b576040516357b234a760e11b81526020600482015260116024820152700d081cdc1858d95cc81c995c5d5a5c9959607a1b60448201526064015b60405180910390fd5b60006104678284610ca3565b905060006104758385610ca3565b905060006104838486610ca3565b905060006104918587610ca3565b905061049c84610cb6565b15806104ae57506104ac83610cb6565b155b806104bf57506104bd82610cb6565b155b806104d057506104ce81610cb6565b155b806104e157506104df85610cb6565b155b15610525576040516357b234a760e11b8152602060048201526013602482015272736f6d65206669656c6473206d697373696e6760681b6044820152606401610452565b61057b6040518060a0016040528061053c87610d8f565b815260200161054a86610d8f565b815260200161055885610d8f565b815260200161056684610d8f565b815260200161057488610d8f565b9052610fa0565b98975050505050505050565b606061059682600001516110ae565b6105a383602001516110ae565b6105b084604001516110ae565b6105bd85606001516110ae565b6105ca86608001516110ae565b6040516020016105de95949392919061257f565b6040516020818303038152906040529050919050565b6000806106004261081a565b9050600061060d4261090f565b9050600061061a42610924565b9050600061062742610939565b905060006106344261095d565b90506000805b60ff8616156107765761065189606001518761096b565b610665575060179250603b91506001610764565b8015610678576106758688610acd565b94505b60ff8516156107605761068f89604001518661096b565b6106a05760179350603b925061074e565b6106ae6102d7888888610b93565b91506106be89608001518361096b565b6106cf5760179350603b925061074e565b6106dd89602001518561096b565b6106f757603b925060ff84166106f257610749565b610737565b8851610703908461096b565b6103455760ff831661071457610726565b8261071e81612b6c565b9350506106f7565b603b925060ff841661073757610749565b8361074181612b6c565b9450506106cf565b601793505b8461075881612b6c565b955050610678565b5060015b8561076e81612b6c565b96505061063a565b600c95508661078481612b37565b97505061063a565b60008061079883611233565b90506107ac8460600151826020015161096b565b80156107c557506107c58460400151826040015161096b565b80156107de57506107de8460200151826060015161096b565b80156107f757506107f78460000151826080015161096b565b949350505050565b606061080a826103cd565b6040516020016105de9190612890565b600080808061082d6301e1338086612930565b610839906107b26128f3565b91506108466107b261141b565b6108538361ffff1661141b565b61085d9190612ad1565b905061086d816301e28500612a2f565b61087790846128f3565b9250806108866107b284612aae565b61ffff166108949190612ad1565b6108a2906301e13380612a2f565b6108ac90846128f3565b92505b84831115610907576108ca6108c5600184612aae565b611460565b156108e4576108dd6301e2850084612ad1565b92506108f5565b6108f26301e1338084612ad1565b92505b610900600183612aae565b91506108af565b509392505050565b600061091a82611233565b6020015192915050565b600061092f82611233565b6040015192915050565b60006018603c6109498185612930565b6109539190612930565b6101399190612bfd565b6000603c6109538184612930565b6000808351600481111561098157610981612c5f565b141561098f57506001610139565b6002835160048111156109a4576109a4612c5f565b14156109c45760408301516109b99083612c11565b60ff16159050610139565b6001835160048111156109d9576109d9612c5f565b14156109f357826020015160ff168260ff16149050610139565b600383516004811115610a0857610a08612c5f565b1415610a3957826060015160ff168260ff1610158015610a325750826080015160ff168260ff1611155b9050610139565b600483516004811115610a4e57610a4e612c5f565b1415610ab45760005b8360a0015160ff16811015610aaa578360c0015181601a8110610a7c57610a7c612c75565b602002015160ff168360ff161415610a98576001915050610139565b80610aa281612ba1565b915050610a57565b5060009050610139565b604051637d8d432960e01b815260040160405180910390fd5b60008260ff1660011480610ae457508260ff166003145b80610af257508260ff166005145b80610b0057508260ff166007145b80610b0e57508260ff166008145b80610b1c57508260ff16600a145b80610b2a57508260ff16600c145b15610b375750601f610139565b8260ff1660041480610b4c57508260ff166006145b80610b5a57508260ff166009145b80610b6857508260ff16600b145b15610b755750601e610139565b610b7e82611460565b15610b8b5750601d610139565b50601c610139565b60006107f784848460008060006114bf565b60006007610bb66201518084612930565b6109539060046128f3565b6000610bd2868686868660006114bf565b9695505050505050565b610be4612129565b50604080518082019091528151815260209182019181019190915290565b6000808260000151610c268560000151866020015186600001518760200151611663565b610c3091906128f3565b90505b83516020850151610c4491906128f3565b8111610c9c5781610c5481612ba1565b9250508260000151610c8b856020015183610c6f9190612ad1565b8651610c7b9190612ad1565b8386600001518760200151611663565b610c9591906128f3565b9050610c33565b5092915050565b610cab612129565b610c9c838383611784565b600080601f8360200151610cca9190612ad1565b8351909150600090610cdc90836128f3565b9050600092505b80821015610d8857815160ff166080811015610d0b57610d046001846128f3565b9250610d75565b60e08160ff161015610d2257610d046002846128f3565b60f08160ff161015610d3957610d046003846128f3565b60f88160ff161015610d5057610d046004846128f3565b60fc8160ff161015610d6757610d046005846128f3565b610d726006846128f3565b92505b5082610d8081612ba1565b935050610ce3565b5050919050565b610d97612143565b6000610dbb604051806040016040528060018152602001601560f91b815250610bdc565b90506000610de1604051806040016040528060018152602001602d60f81b815250610bdc565b90506000610e07604051806040016040528060018152602001602f60f81b815250610bdc565b90506000610e2d604051806040016040528060018152602001600b60fa1b815250610bdc565b9050610e37612143565b610e418786611824565b15610e4f5760008152610bd2565b610e598785611838565b15610e9857600381526000610e6e8886610ca3565b9050610e798161185f565b60ff166060830152610e8a8861185f565b60ff16608083015250610bd2565b610ea28784611838565b15610ecc5760028152610eb58784610ca3565b50610ebf8761185f565b60ff166040820152610bd2565b610ed68783611838565b15610f815760048152610ee7612129565b6000610ef289610cb6565b1115610f7b5760198260a0015160ff161115610f21576040516388b27b5f60e01b815260040160405180910390fd5b610f2b8884610ca3565b9050610f368161185f565b8260c001518360a0015160ff16601a8110610f5357610f53612c75565b60ff909216602092909202015260a08201805190610f7082612bbc565b60ff16905250610ee7565b50610bd2565b60018152610f8e8761185f565b60ff1660208201529695505050505050565b610fa86120dd565b610fdd82608001516040518060400160405280600b81526020016a646179206f66207765656b60a81b815250600060066118ee565b61100c8260600151604051806040016040528060058152602001640dadedce8d60db1b8152506001600c6118ee565b600061101b8360600151611b90565b905061104983604001516040518060400160405280600381526020016264617960e81b8152506001846118ee565b6110778360200151604051806040016040528060048152602001633437bab960e11b815250600060176118ee565b6110a78360000151604051806040016040528060068152602001656d696e75746560d01b8152506000603b6118ee565b5090919050565b60606000825160048111156110c5576110c5612c5f565b14156110e85750506040805180820190915260018152601560f91b602082015290565b6001825160048111156110fd576110fd612c5f565b141561111357610139826020015160ff16611cdd565b60038251600481111561112857611128612c5f565b141561115f5761113e826060015160ff16611cdd565b61114e836080015160ff16611cdd565b6040516020016105de929190612615565b60028251600481111561117457611174612c5f565b141561119a5761118a826040015160ff16611cdd565b6040516020016105de91906126af565b6004825160048111156111af576111af612c5f565b1415610ab45760c08201516000906111d090825b602002015160ff16611cdd565b905060015b8360a0015160ff16811015610c9c57816111fe8560c0015183601a81106111c3576111c3612c75565b60405160200161120f929190612543565b6040516020818303038152906040529150808061122b90612ba1565b9150506111d5565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c081018290529080806112778561081a565b61ffff1684526112886107b261141b565b84516112979061ffff1661141b565b6112a19190612ad1565b91506112b1826301e28500612a2f565b6112bb90846128f3565b9250816107b285600001516112d09190612aae565b61ffff166112de9190612ad1565b6112ec906301e13380612a2f565b6112f690846128f3565b92506000600191505b600c8260ff161161136757611318828660000151610acd565b6113289060ff1662015180612a2f565b90508561133585836128f3565b11156113495760ff82166020860152611367565b61135381856128f3565b93508161135f81612bbc565b9250506112ff565b600191505b61137e85602001518660000151610acd565b60ff168260ff16116113cd578561139885620151806128f3565b11156113ac5760ff821660408601526113cd565b6113b962015180856128f3565b9350816113c581612bbc565b92505061136c565b6113d686610939565b60ff1660608601526113e78661095d565b60ff1660808601526113f886611e05565b60ff1660a086015261140986610ba5565b60ff1660c08601525092949350505050565b6000611428600183612ad1565b915061143661019083612930565b611441606484612930565b61144c600485612930565b6114569190612ad1565b61013991906128f3565b600061146d600483612bdc565b61ffff161561147e57506000919050565b611489606483612bdc565b61ffff161561149a57506001919050565b6114a661019083612bdc565b61ffff16156114b757506000919050565b506001919050565b60006107b25b8761ffff168161ffff16101561151b576114de81611460565b156114f8576114f16301e28500836128f3565b9150611509565b6115066301e13380836128f3565b91505b8061151381612b7f565b9150506114c5565b611523612181565b601f815261153089611460565b1561154157601d6020820152611549565b601c60208201525b601f60408201819052601e606083018190526080830182905260a0830181905260c0830182905260e0830182905261010083018190526101208301829052610140830152610160820152600191505b8760ff168261ffff1610156115fa57806115b3600184612aae565b61ffff16600c81106115c7576115c7612c75565b60200201516115dc9060ff1662015180612a2f565b6115e690846128f3565b9250816115f281612b7f565b925050611598565b611605600188612ae8565b6116159060ff1662015180612a2f565b61161f90846128f3565b925061163060ff8716610e10612a2f565b61163a90846128f3565b925061164a60ff8616603c612a2f565b61165490846128f3565b925061035260ff8516846128f3565b6000838186851161176f576020851161171d57600085156116af57600161168b876020612ad1565b611696906008612a2f565b6116a1906002612987565b6116ab9190612ad1565b1990505b845181166000876116c08b8b6128f3565b6116ca9190612ad1565b855190915083165b82811461170f578186106116f7576116ea8b8b6128f3565b96505050505050506107f7565b8561170181612ba1565b9650508386511690506116d2565b8596505050505050506107f7565b508383206000905b61172f8689612ad1565b821161176d578583208181141561174c57839450505050506107f7565b6117576001856128f3565b935050818061176590612ba1565b925050611725565b505b61177987876128f3565b979650505050505050565b61178c612129565b60006117aa8560000151866020015186600001518760200151611663565b6020808701805191860191909152519091506117c69082612ad1565b8352845160208601516117d991906128f3565b8114156117e9576000855261181b565b835183516117f791906128f3565b85518690611806908390612ad1565b905250835161181590826128f3565b60208601525b50909392505050565b60006118308383611e12565b159392505050565b60208083015183518351928401516000936118569291849190611eed565b14159392505050565b60008061186b83611fff565b90506000805b82518260ff1610156107f7576000838360ff168151811061189457611894612c75565b016020015160f81c9050603081108015906118b3575060398160ff1611155b156118db576118c3603082612ae8565b6118ce83600a612a4e565b6118d8919061290b565b91505b50816118e681612bbc565b925050611871565b60008451600481111561190357611903612c5f565b141561190e57611b8a565b60018451600481111561192357611923612c5f565b14156119ad578160ff16846020015160ff16108061194a57508060ff16846020015160ff16115b156119a857600061195d8360ff16611cdd565b6119698360ff16611cdd565b60405160200161197a92919061273e565b6040516020818303038152906040529050838160405163081a25d560e21b8152600401610452929190612810565b611b8a565b6002845160048111156119c2576119c2612c5f565b1415611a15576001846040015160ff1610806119e757508060ff16846040015160ff16115b156119a85760006119f86001611cdd565b611a048360ff16611cdd565b60405160200161197a929190612645565b600384516004811115611a2a57611a2a612c5f565b1415611a86578060ff16846080015160ff161180611a565750836060015160ff16846080015160ff1611155b156119a8576000611a698360ff16611cdd565b611a758360ff16611cdd565b60405160200161197a92919061279d565b600484516004811115611a9b57611a9b612c5f565b1415610ab45760028460a0015160ff161015611acc578260405163081a25d560e21b8152600401610452919061283e565b6000611ada8360ff16611cdd565b611ae68360ff16611cdd565b604051602001611af79291906126d9565b60408051601f1981840301815291905290506000805b8660a0015160ff16811015611b86578660c0015181601a8110611b3257611b32612c75565b602002015191508460ff168260ff161080611b5257508360ff168260ff16115b15611b7457858360405163081a25d560e21b8152600401610452929190612810565b80611b7e81612ba1565b915050611b0d565b5050505b50505050565b60008082516004811115611ba657611ba6612c5f565b1480611bc45750600382516004811115611bc257611bc2612c5f565b145b15611bd15750601f919050565b600182516004811115611be657611be6612c5f565b1415611bfb5761013982602001516004610acd565b600282516004811115611c1057611c10612c5f565b1415611c4857816040015160ff1660091480611c335750816040015160ff16600b145b15611c405750601e919050565b50601f919050565b600482516004811115611c5d57611c5d612c5f565b1415610ab4576000805b8360a0015160ff16811015610c9c576000611c9d8560c0015183601a8110611c9157611c91612c75565b60200201516004610acd565b90508060ff16601f1415611cb357949350505050565b8260ff168160ff161115611cc5578092505b5080611cd081612ba1565b915050611c67565b919050565b606081611d015750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611d2b5780611d1581612ba1565b9150611d249050600a83612930565b9150611d05565b6000816001600160401b03811115611d4557611d45612c8b565b6040519080825280601f01601f191660200182016040528015611d6f576020820181803683370190505b509050815b8515611dfc57611d85600182612ad1565b90506000611d94600a88612930565b611d9f90600a612a2f565b611da99088612ad1565b611db490603061290b565b905060008160f81b905080848481518110611dd157611dd1612c75565b60200101906001600160f81b031916908160001a905350611df3600a89612930565b97505050611d74565b50949350505050565b6000610139603c83612bfd565b8151815160009190811115611e25575081515b6020808501519084015160005b83811015611ede5782518251808214611eae576000196020871015611e8d57600184611e5f896020612ad1565b611e6991906128f3565b611e74906008612a2f565b611e7f906002612987565b611e899190612ad1565b1990505b8181168382168181039114611eab5797506101399650505050505050565b50505b611eb96020866128f3565b9450611ec66020856128f3565b93505050602081611ed791906128f3565b9050611e32565b5084518651610bd29190612a6f565b600080858411611ff55760208411611fa05760008415611f38576001611f14866020612ad1565b611f1f906008612a2f565b611f2a906002612987565b611f349190612ad1565b1990505b8351811685611f4789896128f3565b611f519190612ad1565b805190935082165b818114611f8b57878411611f7357879450505050506107f7565b83611f7d81612b55565b945050828451169050611f59565b611f9587856128f3565b9450505050506107f7565b838320611fad8588612ad1565b611fb790876128f3565b91505b858210611ff35784822081811415611fe057611fd686846128f3565b93505050506107f7565b611feb600184612ad1565b925050611fba565b505b5092949350505050565b6060600082600001516001600160401b0381111561201f5761201f612c8b565b6040519080825280601f01601f191660200182016040528015612049576020820181803683370190505b5090506000602082019050610c9c81856020015186600001515b6020811061209b578151835261207a6020846128f3565b92506120876020836128f3565b9150612094602082612ad1565b9050612063565b60001981156120ca5760016120b1836020612ad1565b6120bd90610100612987565b6120c79190612ad1565b90505b9151835183169219169190911790915250565b6040518060a001604052806120f0612143565b81526020016120fd612143565b815260200161210a612143565b8152602001612117612143565b8152602001612124612143565b905290565b604051806040016040528060008152602001600081525090565b6040805160e08101909152806000815260006020820181905260408201819052606082018190526080820181905260a082015260c0016121246121a0565b604051806101800160405280600c906020820280368337509192915050565b604051806103400160405280601a906020820280368337509192915050565b600082601f8301126121d057600080fd5b6040516103408082016001600160401b03811183821017156121f4576121f4612c8b565b604052818482810187101561220857600080fd5b600092505b601a8310156122345761221f81612312565b8252600192909201916020918201910161220d565b509195945050505050565b6000610400828403121561225257600080fd5b60405160e081016001600160401b038111828210171561227457612274612c8b565b60405290508082356005811061228957600080fd5b815261229760208401612312565b60208201526122a860408401612312565b60408201526122b960608401612312565b60608201526122ca60808401612312565b60808201526122db60a08401612312565b60a08201526122ed8460c085016121bf565b60c08201525092915050565b6000611400828403121561230c57600080fd5b50919050565b803560ff81168114611cd857600080fd5b6000806020838503121561233657600080fd5b82356001600160401b038082111561234d57600080fd5b818501915085601f83011261236157600080fd5b81358181111561237057600080fd5b86602082850101111561238257600080fd5b60209290920196919550909350505050565b600061140082840312156123a757600080fd5b61018683836122f9565b60008061142083850312156123c557600080fd5b6123cf84846122f9565b94611400939093013593505050565b600061140082840312156123f157600080fd5b60405160a081016001600160401b038111828210171561241357612413612c8b565b604052612420848461223f565b815261243084610400850161223f565b602082015261244384610800850161223f565b604082015261245684610c00850161223f565b606082015261246984611000850161223f565b60808201529392505050565b8060005b601a811015611b8a57815160ff16845260209384019390910190600101612479565b600081518084526124b3816020860160208601612b0b565b601f01601f19169290920160200192915050565b8051600581106124e757634e487b7160e01b600052602160045260246000fd5b8083525060ff602082015116602083015260ff604082015116604083015260ff606082015116606083015260ff608082015116608083015260ff60a08201511660a083015260c081015161253e60c0840182612475565b505050565b60008351612555818460208801612b0b565b600b60fa1b9083019081528351612573816001840160208801612b0b565b01600101949350505050565b60008651612591818460208b01612b0b565b8083019050600160fd1b80825287516125b1816001850160208c01612b0b565b6001920191820181905286516125ce816002850160208b01612b0b565b6002920191820181905285516125eb816003850160208a01612b0b565b60039201918201528351612606816004840160208801612b0b565b01600401979650505050505050565b60008351612627818460208801612b0b565b602d60f81b9083019081528351612573816001840160208801612b0b565b730d2dceccae4ecc2d840daeae6e840c4ca40545e560631b815260008351612674816014850160208801612b0b565b602d60f81b6014918401918201528351612695816015840160208801612b0b565b602960f81b60159290910191820152601601949350505050565b612a2f60f01b8152600082516126cc816002850160208701612b0b565b9190910160020192915050565b7f6974656d7320696e206c697374206d7573742062652077697468696e2000000081526000835161271181601d850160208801612b0b565b602d60f81b601d91840191820152835161273281601e840160208801612b0b565b01601e01949350505050565b701d985b1d59481b5d5cdd081899480f8f4b607a1b81526000835161276a816011850160208801612b0b565b6620616e64203c3d60c81b6011918401918201528351612791816018840160208801612b0b565b01601801949350505050565b77034b73b32b93b30b61036bab9ba103132903bb4ba3434b7160451b8152600083516127d0816018850160208801612b0b565b602d60f81b60189184019182015283516127f1816019840160208801612b0b565b01601901949350505050565b602081526000610186602083018461249b565b604081526000612823604083018561249b565b8281036020840152612835818561249b565b95945050505050565b604081526000612851604083018461249b565b8281036020840152602081527f6c69737473206d7573742068617665206174206c656173742032206974656d7360208201526040810191505092915050565b6000611400820190506128a48284516124c7565b60208301516128b76104008401826124c7565b5060408301516128cb6108008401826124c7565b5060608301516128df610c008401826124c7565b506080830151610c9c6110008401826124c7565b6000821982111561290657612906612c33565b500190565b600060ff821660ff84168060ff0382111561292857612928612c33565b019392505050565b60008261293f5761293f612c49565b500490565b600181815b8085111561297f57816000190482111561296557612965612c33565b8085161561297257918102915b93841c9390800290612949565b509250929050565b6000610186838360008261299d57506001610139565b816129aa57506000610139565b81600181146129c057600281146129ca576129e6565b6001915050610139565b60ff8411156129db576129db612c33565b50506001821b610139565b5060208310610133831016604e8410600b8410161715612a09575081810a610139565b612a138383612944565b8060001904821115612a2757612a27612c33565b029392505050565b6000816000190483118215151615612a4957612a49612c33565b500290565b600060ff821660ff84168160ff0481118215151615612a2757612a27612c33565b60008083128015600160ff1b850184121615612a8d57612a8d612c33565b6001600160ff1b0384018313811615612aa857612aa8612c33565b50500390565b600061ffff83811690831681811015612ac957612ac9612c33565b039392505050565b600082821015612ae357612ae3612c33565b500390565b600060ff821660ff841680821015612b0257612b02612c33565b90039392505050565b60005b83811015612b26578181015183820152602001612b0e565b83811115611b8a5750506000910152565b600061ffff821680612b4b57612b4b612c33565b6000190192915050565b600081612b6457612b64612c33565b506000190190565b600060ff821680612b4b57612b4b612c33565b600061ffff80831681811415612b9757612b97612c33565b6001019392505050565b6000600019821415612bb557612bb5612c33565b5060010190565b600060ff821660ff811415612bd357612bd3612c33565b60010192915050565b600061ffff80841680612bf157612bf1612c49565b92169190910692915050565b600082612c0c57612c0c612c49565b500690565b600060ff831680612c2457612c24612c49565b8060ff84160691505092915050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea264697066735822122064ca115097f275dce0de0f8b626161b9a12a0406f86495eb43905a68dcbe7c7864736f6c63430008060033";

type CronConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CronConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Cron__factory extends ContractFactory {
  constructor(...args: CronConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Cron> {
    return super.deploy(overrides || {}) as Promise<Cron>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Cron {
    return super.attach(address) as Cron;
  }
  override connect(signer: Signer): Cron__factory {
    return super.connect(signer) as Cron__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CronInterface {
    return new utils.Interface(_abi) as CronInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Cron {
    return new Contract(address, _abi, signerOrProvider) as Cron;
  }
}
